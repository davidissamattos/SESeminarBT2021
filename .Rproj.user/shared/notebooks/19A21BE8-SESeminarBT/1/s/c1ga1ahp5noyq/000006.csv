"0","models<-unique(d2$Model)"
"0","n_models = length(models)"
"0","comb <- gtools::combinations(n=n_models, r=2, v=seq(1:n_models), repeats.allowed = F) #all teh paired combinations"
"0",""
"0","d_acc_bt <-  dplyr::tribble(~model0, ~model1, ~y, ~Iteration, ~Dataset, ~DatasetType)"
"0",""
"0","#now we loop each row of the rank wide dataset and create a new one"
"0","for(i in 1:nrow(d_acc_rank))"
"0","{"
"0","  current_row <- d_acc_rank[i,]"
"0","  for(j in 1:nrow(comb)){"
"0","    comb_row <- comb[j,]"
"0","    "
"0","    model0 <- models[comb_row[1]]"
"0","    model0_rank <- current_row[[1,model0]]"
"0","    "
"0","    model1 <- models[comb_row[2]]"
"0","    model1_rank <- current_row[[1,model1]]"
"0","    "
"0","    diff_rank <- model1_rank - model0_rank"
"0","    #SInce higher accuracy is better if model 1 rank- model 0 rank is positive than model1 wins and y=1 else y=0"
"0","    y <- ifelse(diff_rank>0, 1, 0) "
"0","    "
"0","    "
"0","    d_acc_bt <-d_acc_bt %>%  "
"0","      add_row(model0=model0,"
"0","              model1=model1,"
"0","              y=y,"
"0","              Iteration=current_row$Iteration,"
"0","              Dataset=current_row$Dataset,"
"0","              DatasetType=current_row$DataType)"
"0","    "
"0","  }"
"0","}"
